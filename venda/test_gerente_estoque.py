from django.test import TestCase, Client
from django.urls import reverse
from django.contrib.auth.models import User
from django.utils import timezone
from datetime import date, timedelta
from decimal import Decimal

from produto.models import Produto
from clientes.models import Cliente
from venda.models import Venda


class TesteGerenteEstoque(TestCase):
    """
    Sistema automatizado de testes simplificado para as User Stories 7, 8 e 9
    """

    def setUp(self):
        """Configura√ß√£o inicial para todos os testes"""
        self.client = Client()
        
        # Criar usu√°rio gerente
        self.gerente = User.objects.create_user(
            username='gerente_teste',
            password='senha123',
            email='gerente@teste.com'
        )
        
        # Criar produtos de teste
        self.produto_alto_estoque = Produto.objects.create(
            nome='Notebook Dell',
            descricao='Notebook para teste',
            preco=Decimal('2500.00'),
            estoque=20
        )
        
        self.produto_baixo_estoque = Produto.objects.create(
            nome='Mouse Logitech',
            descricao='Mouse para teste',
            preco=Decimal('45.00'),
            estoque=3
        )
        
        # Criar cliente de teste
        self.cliente = Cliente.objects.create(
            nome='Cliente Teste',
            email='cliente@teste.com'
        )
        
        # Login do gerente
        self.client.login(username='gerente_teste', password='senha123')

    def test_us7_acesso_pedidos_aprovados(self):
        """US7: Teste b√°sico - Acessar p√°gina de pedidos aprovados"""
        print("\nüß™ TESTANDO US7 - Acesso √† p√°gina de pedidos aprovados")
        
        response = self.client.get('/venda/pedidos-aprovados/')
        print(f"Status code: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ P√°gina de pedidos aprovados acess√≠vel")
        else:
            print(f"‚ùå Erro ao acessar p√°gina: {response.status_code}")

    def test_us8_acesso_entregas_hoje(self):
        """US8: Teste b√°sico - Acessar p√°gina de entregas de hoje"""
        print("\nüß™ TESTANDO US8 - Acesso √† p√°gina de entregas de hoje")
        
        response = self.client.get('/venda/entregas-hoje/')
        print(f"Status code: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ P√°gina de entregas de hoje acess√≠vel")
        else:
            print(f"‚ùå Erro ao acessar p√°gina: {response.status_code}")

    def test_us9_acesso_relatorios(self):
        """US9: Teste b√°sico - Acessar p√°ginas de relat√≥rios"""
        print("\nüß™ TESTANDO US9 - Acesso √†s p√°ginas de relat√≥rios")
        
        urls_relatorios = [
            '/venda/relatorios/',
            '/venda/relatorio/estoque-baixo/',
            '/venda/relatorio/promocao/',
            '/venda/relatorio/por-grupo/'
        ]
        
        for url in urls_relatorios:
            response = self.client.get(url)
            print(f"URL: {url} - Status: {response.status_code}")
            
            if response.status_code == 200:
                print(f"‚úÖ {url} acess√≠vel")
            else:
                print(f"‚ùå Erro em {url}: {response.status_code}")

    def test_us9_exportacao_pdf(self):
        """US9: Teste b√°sico - Exporta√ß√£o PDF"""
        print("\nüß™ TESTANDO US9 - Exporta√ß√£o PDF")
        
        response = self.client.get('/venda/relatorio/pdf/estoque_baixo/')
        print(f"Status code: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ Exporta√ß√£o PDF funcionando")
            print(f"Content-Type: {response.get('Content-Type', 'N/A')}")
        else:
            print(f"‚ùå Erro na exporta√ß√£o PDF: {response.status_code}")

    def test_us9_exportacao_excel(self):
        """US9: Teste b√°sico - Exporta√ß√£o Excel"""
        print("\nüß™ TESTANDO US9 - Exporta√ß√£o Excel")
        
        response = self.client.get('/venda/relatorio/excel/promocao/')
        print(f"Status code: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ Exporta√ß√£o Excel funcionando")
            print(f"Content-Type: {response.get('Content-Type', 'N/A')}")
        else:
            print(f"‚ùå Erro na exporta√ß√£o Excel: {response.status_code}")

    def executar_todos_os_testes_basicos(self):
        """Executa todos os testes b√°sicos em sequ√™ncia"""
        print("\n" + "="*60)
        print("üöÄ EXECUTANDO TESTES B√ÅSICOS - USER STORIES 7, 8 e 9")
        print("üìã Testando acesso √†s p√°ginas e funcionalidades b√°sicas")
        print("="*60)
        
        try:
            self.test_us7_acesso_pedidos_aprovados()
            self.test_us8_acesso_entregas_hoje()
            self.test_us9_acesso_relatorios()
            self.test_us9_exportacao_pdf()
            self.test_us9_exportacao_excel()
            
            print("\n" + "="*60)
            print("‚úÖ TESTES B√ÅSICOS CONCLU√çDOS!")
            print("üìä Verifica√ß√£o de acessibilidade das funcionalidades")
            print("="*60)
            
        except Exception as e:
            print(f"\n‚ùå ERRO NO TESTE: {str(e)}")
            print("="*60)
